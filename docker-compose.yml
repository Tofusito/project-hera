version: '3.8'

services:
  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ollama_service
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - hera-network
    environment:
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_KEEP_ALIVE=${OLLAMA_KEEP_ALIVE}
      - OLLAMA_MAX_LOADED_MODELS=${OLLAMA_MAX_LOADED_MODELS}
      - OLLAMA_MODEL_TOKEN_LIMIT=${OLLAMA_MODEL_TOKEN_LIMIT}
      - OLLAMA_NUM_PARALLEL=${OLLAMA_NUM_PARALLEL}
      - OLLAMA_NOPRUNE=${OLLAMA_NOPRUNE}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    deploy:
      resources:
        limits:
          cpus: "12.0"
          memory: "18g"
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['all']
            capabilities: [gpu]
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - chroma_data:/chroma/chroma
    ports:
      - "8000:8000"
    environment:
      - ALLOW_RESET=true
    networks:
      - hera-network

  anythingllm:
    build:
      context: ./anythingllm
      dockerfile: Dockerfile
    container_name: anythingllm
    ports:
      - "3001:3001"
    cap_add:
      - SYS_ADMIN
    environment:
      - STORAGE_DIR=${STORAGE_DIR}
      - JWT_SECRET=${JWT_SECRET}
      - LLM_PROVIDER=${LLM_PROVIDER}
      - OLLAMA_BASE_PATH=${OLLAMA_BASE_PATH}
      - OLLAMA_MODEL_PREF=${OLLAMA_MODEL}
      - OLLAMA_MODEL_TOKEN_LIMIT=${OLLAMA_MODEL_TOKEN_LIMIT}
      - OLLAMA_TIMEOUT=${OLLAMA_TIMEOUT}
      - EMBEDDING_ENGINE=${EMBEDDING_ENGINE}
      - EMBEDDING_BASE_PATH=${EMBEDDING_BASE_PATH}
      - EMBEDDING_MODEL_PREF=${EMBEDDING_MODEL_PREF}
      - EMBEDDING_MODEL_MAX_CHUNK_LENGTH=${EMBEDDING_MODEL_MAX_CHUNK_LENGTH}
      - VECTOR_DB=${VECTOR_DB}
      - CHROMA_ENDPOINT=${CHROMA_ENDPOINT}
      - WHISPER_PROVIDER=${WHISPER_PROVIDER}
      - TTS_PROVIDER=${TTS_PROVIDER}
      - PASSWORDMINCHAR=${PASSWORDMINCHAR}
      - WORKSPACE=${WORKSPACE}
    volumes:
      - anythingllm_storage:/app/server/storage
    restart: always
    deploy:
      resources:
        limits:
          cpus: "12.0"
          memory: "8g"
    networks:
      - hera-network
    depends_on:
      - ollama
      - chroma

  hera:
    build:
      context: ./hera
      dockerfile: Dockerfile
    container_name: hera
    environment:
      - PYTHONUNBUFFERED=1
      - WORKSPACE=${WORKSPACE}
      - API_KEY=${API_KEY}
      - PASSWORD=${PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    depends_on:
      - ollama
      - anythingllm
    networks:
      - hera-network
    volumes:
      - ./documentos:/app/documentos
      - ./hera/session:/app/session

networks:
  hera-network:
    driver: bridge

volumes:
  ollama_data:
  anythingllm_storage:
  chroma_data:
